public class BubbleSort {
    public static void main(String[] args) {
        int[] arr = {5, 2, 9, 1, 3};
        for (int i = 0; i < arr.length - 1; i++)
            for (int j = 0; j < arr.length - i - 1; j++)
                if (arr[j] > arr[j + 1]) {
                    int temp = arr[j];
                    arr[j] = arr[j + 1];
                    arr[j + 1] = temp;
                }
        for (int num : arr) System.out.print(num + " ");
    }
}

2. Linear Search



public class LinearSearch {
    public static void main(String[] args) {
        int[] arr = {4, 7, 1, 3, 9};
        int key = 3, found = -1;
        for (int i = 0; i < arr.length; i++)
            if (arr[i] == key) { found = i; break; }
        System.out.println(found != -1 ? "Found at index " + found : "Not found");
    }
}

3. Binary Search (on Sorted Array)



public class BinarySearch {
    public static void main(String[] args) {
        int[] arr = {1, 3, 5, 7, 9};
        int key = 5, low = 0, high = arr.length - 1, mid;
        boolean found = false;
        while (low <= high) {
            mid = (low + high) / 2;
            if (arr[mid] == key) {
                found = true;
                break;
            } else if (key < arr[mid])
                high = mid - 1;
            else
                low = mid + 1;
        }
        System.out.println(found ? "Element found" : "Element not found");
    }
}

4. Check Anagram Strings



import java.util.Arrays;

public class AnagramCheck {
    public static void main(String[] args) {
        String s1 = "listen", s2 = "silent";
        char[] a1 = s1.toCharArray(), a2 = s2.toCharArray();
        Arrays.sort(a1);
        Arrays.sort(a2);
        System.out.println(Arrays.equals(a1, a2) ? "Anagrams" : "Not Anagrams");
    }
}


---

ðŸ’¬ OOP & Utility

5. Swap Two Numbers (using Class)



class Swap {
    int a = 10, b = 20;
    void swap() {
        int temp = a;
        a = b;
        b = temp;
    }
    public static void main(String[] args) {
        Swap obj = new Swap();
        System.out.println("Before: a=" + obj.a + ", b=" + obj.b);
        obj.swap();
        System.out.println("After: a=" + obj.a + ", b=" + obj.b);
    }
}

6. Compare Two Objects (Override equals)



class Student {
    String name;
    Student(String name) { this.name = name; }

    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Student)) return false;
        Student s = (Student) o;
        return this.name.equals(s.name);
    }

    public static void main(String[] args) {
        Student s1 = new Student("Naveen");
        Student s2 = new Student("Naveen");
        System.out.println(s1.equals(s2) ? "Equal" : "Not Equal");
    }
}


---

âŒ› Date & Time

7. Current Date and Time



import java.time.LocalDateTime;

public class DateTimeNow {
    public static void main(String[] args) {
        LocalDateTime now = LocalDateTime.now();
        System.out.println("Current: " + now);
    }
}

8. Days Between Two Dates



import java.time.LocalDate;
import java.time.temporal.ChronoUnit;

public class DateDiff {
    public static void main(String[] args) {
        LocalDate d1 = LocalDate.of(2024, 1, 1);
        LocalDate d2 = LocalDate.of(2025, 6, 21);
        System.out.println("Days between: " + ChronoUnit.DAYS.between(d1, d2));
    }
}


---

ðŸ§µ Threading

9. Basic Thread Example



class MyThread extends Thread {
    public void run() {
        System.out.println("Thread running...");
    }

    public static void main(String[] args) {
        MyThread t = new MyThread();
        t.start();
    }
}


---

ðŸªŸ Basic GUI (Swing)

10. Simple Swing Window



import javax.swing.*;

public class MyWindow {
    public static void main(String[] args) {
        JFrame f = new JFrame("My First GUI");
        JLabel l = new JLabel("Hello Java!", JLabel.CENTER);
        f.setSize(300, 200);
        f.add(l);
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.setVisible(true);
    }
}
